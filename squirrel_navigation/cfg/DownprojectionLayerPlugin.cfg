#!/usr/bin/env python

from dynamic_reconfigure.parameter_generator_catkin import *

PACKAGE_NAME = "squirrel_navigation"

gen = ParameterGenerator()

gen.add("enabled", bool_t, 0, "Whether to use this plugin or not", True)

# Parameters related to obstacles
gen.add("robot_height", double_t, 0, "Height of the robot (i.e. max obstacle height)", 1.0, 0, 50)
gen.add("robot_radius", double_t, 0, "Diameter of the robot", 0.22, 0, 50)
gen.add("floor_threshold", double_t, 0, "Height to threshold the observaion related to the floor", 0.0, 0, 50)
gen.add("origin_z", double_t, 0, "The z origin of the map in meters.", 0, 0)
gen.add("z_resolution", double_t, 0, "The z resolution of the map in meters/cell.", 0.2, 0, 50)
gen.add("z_voxels", int_t, 0, "The number of voxels to in each vertical column.", 10, 0, 16)
gen.add("unknown_threshold", int_t, 0, 'The number of unknown cells allowed in a column considered to be known', 15, 0, 16)
gen.add("mark_threshold", int_t, 0, 'The maximum number of marked cells allowed in a column considered to be free', 0, 0, 16)
gen.add("verbose", bool_t, 0, 'Set verbosity', False)
gen.add("laser_height", double_t, 0, "Height of the laser sensor (to distinguish readings between laser and kinect)", 0, 0, 0.1)

# Obstacle persistance
gen.add("obstacles_persistence", double_t, 0, "Obstacle lifetime in seconds (disabled = -1.0)", 60.0, -1.0, 3600.0);


combo_enum = gen.enum([ gen.const("Overwrite", int_t, 0, "b"),
                        gen.const("Maximum",   int_t, 1, "a") ],
                      "Method for combining layers enum")

gen.add("combination_method", int_t, 0, "Method for combining two layers", 1, 0, 2, edit_method=combo_enum)

exit(gen.generate(PACKAGE_NAME, "squirrel_navigation", "DownprojectionLayerPlugin"))